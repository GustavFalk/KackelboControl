<div class="time-wrapper">
    <span class="material-symbols-outlined lamp">
        @Icon
    </span>
    <div class="time-picker">
        <div class="time-text">
            <p>
                @Title
            </p>
            <h1>
                @SelectedTime.ToString("HH:mm")
            </h1>
        </div>
        <span class="material-symbols-outlined clock">
            schedule
        </span>
        
    </div>
    <input @bind-value="SelectedTime" type="time" min="00:00" max="23:59" pattern="[0-9]{2}:[0-9]{2}" />
</div>

@code {

    private TimeOnly _value;

    [Parameter]
    public TimeOnly SelectedTime
    {

        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;

            if (SelectedTimeChanged.HasDelegate)
            {
                SelectedTimeChanged.InvokeAsync(value);
            }
        }
    }

    [Parameter]
    public EventCallback<TimeOnly> SelectedTimeChanged { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string? Icon { get; set; }
}
