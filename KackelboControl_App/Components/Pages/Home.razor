@page "/"
@using KackelboControl_App.Components.GuiComponents
@using KackelboControl_App.Models
@using KackelboControl_App.Services
@inject IApiService _apiService
@inject IDateTimeProvider _dateTimeProvider

<div class="page-wrapper">
    <div class="upper-border">
        <div class="logo">
            <img src="./images/KackelboContolLogo.png" />
        </div>
        <div class="settings-wrapper" @onclick="ShowHideSettings">
            <span class="material-symbols-outlined settings-icon">
                settings
            </span>
        </div>
    </div>
    @if (showSettings)
    {
        <div class="setting-view">
            <TimePickerComponent @bind-SelectedTime="triggersToChange.LightOnTime" />
            <TimePickerComponent @bind-SelectedTime="triggersToChange.LightOffTime" />
            <TempPickerComponent @bind-SelectedTemp="triggersToChange.MinTemp"/>
            <TempPickerComponent @bind-SelectedTemp="triggersToChange.MaxTemp"/>
            <ToggleSwitchComponent @bind-Checked="triggersToChange.UseSunLight"/>
            <Button @onclick=UpdateSensorTriggers>SAVE</Button>
        </div>
    }

    <SunTrackerComponent StartTime="triggers.LightOnTime" EndTime="triggers.LightOffTime" />
    <EggCounterComponent />
    <TemperatureComponent />

</div>

@code {

    private SensorTriggers triggers = new();
    private bool showSettings;

    private UpdateSensorTriggers triggersToChange;

    protected override async Task OnInitializedAsync()
    {
        await GetSensorTriggers();
        await base.OnInitializedAsync();
    }

    private async Task GetSensorTriggers()
    {
        triggers = await _apiService.GetSensorTriggers();
        triggersToChange = new UpdateSensorTriggers(triggers);
    }

    private async Task UpdateSensorTriggers()
    {
        var update = triggersToChange;
        triggers = await _apiService.UpdateSensorTriggers(update);
        ShowHideSettings();
    }

    private void ShowHideSettings()
    {
        triggersToChange = new UpdateSensorTriggers(triggers);
        showSettings = !showSettings;
    }
}