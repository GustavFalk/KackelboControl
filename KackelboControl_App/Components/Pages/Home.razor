@page "/"
@using KackelboControl_App.Components.GuiComponents
@using KackelboControl_App.Models
@using KackelboControl_App.Services
@inject IApiService _apiService
@inject IDateTimeProvider _dateTimeProvider

<div class="page-wrapper">
    <div class="upper-border">
        <div class="logo">
            <img src="./images/KackelboContolLogo.png" />
        </div>
        <div class="settings-wrapper" @onclick="()=> showSettings = !showSettings">
            <span class="material-symbols-outlined settings-icon">
                settings
            </span>
        </div>
    </div>
    @if (showSettings)
    {
        <div class="setting-view">
            <h3>@triggers.ArduinoLastSync</h3>
        </div>
    }

    <SunTrackerComponent StartTime="triggers.LightOnTime" EndTime="triggers.LightOffTime" />
    <EggCounterComponent />
    <TemperatureComponent />

</div>

@code {

    private SensorTriggers triggers = new();
    private bool showSettings;

    protected override async Task OnInitializedAsync()
    {
        await GetSensorTriggers();
        await base.OnInitializedAsync();
    }

    private async Task GetSensorTriggers()
    {
        triggers = await _apiService.GetSensorTriggers();
    }

    private async Task UpdateSensorTriggers()
    {
        var update = new UpdateSensorTriggers()
            {
                LightOnTime = new TimeOnly(08, 00),
                LightOffTime = new TimeOnly(20, 35),
                MinTemp = 15.52m,
                MaxTemp = 21,
                UseSunLight = false
            };
        triggers = await _apiService.UpdateSensorTriggers(update);
    }
}