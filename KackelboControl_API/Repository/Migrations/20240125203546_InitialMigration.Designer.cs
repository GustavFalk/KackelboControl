// <auto-generated />
using System;
using KackelboControl_API.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KackelboControl_API.Repository.Migrations
{
    [DbContext(typeof(KackelboControlDbContext))]
    [Migration("20240125203546_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("KackelboControl_API.Repository.Entities.RelayChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("ArduinoTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Relay")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RelayOn")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TempIndoors")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RelayChangeLog");
                });

            modelBuilder.Entity("KackelboControl_API.Repository.Entities.SensorTriggers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSynced")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("LightOffTime")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("LightOnTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaxTemp")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MinTemp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseSunLight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SensorTriggers");
                });

            modelBuilder.Entity("KackelboControl_API.Repository.Entities.SensorValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("ArduinoTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TempIndoors")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TempOutdoor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SensorValueLog");
                });

            modelBuilder.Entity("KackelboControl_API.Repository.Entities.Sunlight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Sunrise")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Sunset")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SunRiseSunSet");
                });
#pragma warning restore 612, 618
        }
    }
}
